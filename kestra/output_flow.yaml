id: image_retrieval_flow
namespace: company.team

description: Retrieves an image from S3 based on imageId and versionId, processes the image, and sends it to a local endpoint.


tasks:
  - id: fetch_workspace_details
    type: io.kestra.plugin.jdbc.postgresql.Query
    url: jdbc:postgresql://172.17.0.1:5432/img_vr_db
    username: admin
    password: admin
    sql: |
      SELECT artifact_url 
      FROM "Workspace" 
      WHERE id = '{{ trigger.body.workspaceId }}'

  - id: retrieve_s3_artifact
    type: io.kestra.plugin.scripts.python.Commands
    containerImage: python:slim
    namespaceFiles:
      enabled: true
      include:
        - reconstruct.py
    warningOnStdErr: false
    taskRunner:
      type: io.kestra.plugin.core.runner.Process
    commands:
      - python reconstruct.py
    env:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      S3_ENDPOINT: http://host.docker.internal:4566
      S3_BUCKET_NAME: localstack_kestra
      ART_URL: "{{trigger.body.artifact_url}}"
      COMMIT_HASH : "{{trigger.body.commit_hash}}"
      WORKSPACE_ID: "{{trigger.body.workspaceId}}"
      
  - id: log_image_retrieval
    type: io.kestra.plugin.core.log.Log
    message: "Image retrieved and processed for ID: {{ trigger.body.workspaceId }}"

triggers:
  - id: api_trigger
    type: io.kestra.plugin.core.trigger.Webhook
    key: retrieve_image_webhook 
